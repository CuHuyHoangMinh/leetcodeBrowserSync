package controller;

import java.io.FileWriter;
import java.io.IOException;
import java.util.concurrent.TimeUnit;

import org.json.*;


import io.github.cdimascio.dotenv.Dotenv;
import okhttp3.HttpUrl;
import okhttp3.MediaType;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;

public class GitController {

	private static final String GIT_URL = "api.github.com";

	
	private OkHttpClient client;

	
	private GitController() {
		client = new OkHttpClient.Builder().readTimeout(1000, TimeUnit.MILLISECONDS)
				.writeTimeout(1000, TimeUnit.MILLISECONDS).build();
	}
	
	private static class singletonHelper {
		private static final GitController INSTANCE = new GitController();
	}

	public static GitController getInstance() {
		return singletonHelper.INSTANCE;
	}
	public void connectGit() {
		Dotenv dotenv = Dotenv.configure().directory("./").ignoreIfMalformed().ignoreIfMissing().load();

		String gitToken = dotenv.get("gitToken");
		HttpUrl url = new HttpUrl.Builder()
				.scheme("https")
				.host(GIT_URL)
				.addPathSegment("repos")
				.addPathSegment(dotenv.get("gitUser"))
				.addPathSegment("gitRepo")
				.build();
		
		Request req = new Request.Builder()
				.url(url)
				.header("Authorization", dotenv.get("gitToken"))
				.build();
		
		try {
			Response response = client.newCall(req).execute();
			System.out.println(response.body().string());
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

}
