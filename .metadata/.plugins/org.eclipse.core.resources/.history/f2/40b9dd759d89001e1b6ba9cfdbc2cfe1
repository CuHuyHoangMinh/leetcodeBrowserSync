package minh.leetcodesync.controller;

import java.io.IOException;
import java.util.concurrent.TimeUnit;

import org.json.*;

import io.github.cdimascio.dotenv.Dotenv;
import okhttp3.HttpUrl;
import okhttp3.MediaType;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;


public class controller {
	private static String leetcodeURL = "https://";
	private static String leetcode = "leetcode.com";
	private static String leetcodeSubmission = "/api/submissions/";
	
	private static controller instance;
	private OkHttpClient client;

	private controller() {
		client =  new OkHttpClient.Builder().readTimeout(1000, TimeUnit.MILLISECONDS)
				.writeTimeout(1000, TimeUnit.MILLISECONDS).build();
	}
	
	private static class singletonHelper {
		private static final controller INSTANCE = new controller();
	}
	public static controller getInstance() {
		return singletonHelper.INSTANCE;
	}

	public JSONObject downloadAll() {
		MediaType mediaType = MediaType.parse("application/json");
		Dotenv dotenv = Dotenv.configure().directory("./").ignoreIfMalformed().ignoreIfMissing().load();
		
		String csrtf = dotenv.get("leetcodecsrftoken");
		String session = dotenv.get("leetcodesession");
		
		if (csrtf == null) {
			System.out.println("Add CSRTF token");
			throw new NullPointerException();
		}
		if (session == null) {
			System.out.println("Add session token");
			throw new NullPointerException();
		}
		try {
			int offset = 0;
			int limit = 20;
			String lastKey = "";
			HttpUrl.Builder urlBuilder = HttpUrl.parse("https://leetcode.com/api/submissions/");
			Request request = new Request.Builder().url("https://leetcode.com/api/submissions/")
					.header("X-Requested-With", "XMLHttpRequest").header("X-CSRFToken", csrtf)
					.header("Cookie", "csrftoken=" + csrtf + ";LEETCODE_SESSION=" + session)
					
					.build();

			Response response = client.newCall(request).execute();
			String responseString = response.body().string();
			JSONObject jsonObject = new JSONObject(responseString);
			System.out.println(jsonObject.toString());
			System.out.println(response.message());
			return jsonObject;
		} catch (IOException | JSONException ex) {
			System.out.println(ex.getMessage());
			return null;
		}
	}

}
